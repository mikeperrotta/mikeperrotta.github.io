{"version":3,"sources":["assets/images/spice-rack.jpeg","assets/images/white-keyboard.jpg","assets/images/meditation-article-cover-image-with-text.png","assets/images/neosensory-image.png","assets/images/empire-app-image.png","assets/images/about/headshot.jpg","assets/images/wood_header.jpg","assets/images/empire-app/amplitude.png","assets/images/empire-app/logo.png","assets/images/empire-app/article-image.png","assets/images/empire-app/expo-demo.gif","assets/images/empire-app/xd-demo.png","assets/images/empire-app/empire_app_header2x.png","core/styles/Colors.js","core/router/Routes.js","containers/app/AppHomePageMenu.js","components/layout/PageSection.js","containers/intro/IntroSection.js","components/content/ProjectSection.js","containers/portfolio/Projects.js","containers/portfolio/PortfolioSection.js","containers/about/AboutSection.js","components/content/Footer.js","containers/app/AppHomePage.js","components/content/Menu.js","containers/projects/spicerack/SpiceRackSections.js","core/router/RouterHelpers.js","containers/projects/spicerack/SpiceRack.js","containers/projects/empire_app/EmpireAppSections.js","containers/projects/empire_app/EmpireApp.js","containers/app/AppContainer.js","serviceWorker.js","index.js"],"names":["module","exports","COLORS","NEUTRALS","HOME","PORTFOLIO","ABOUT","EMPIRE_APP","SPICE_RACK","StickyWrapper","styled","div","Menu","props","isSticky","css","MenuHashLink","NavHashLink","pos","titleCenter","titleInvisible","titleLeft","projRight","projCenter","projLeft","aboutRight","aboutCenter","getElementYCoordinate","el","getBoundingClientRect","top","window","pageYOffset","scrollWithOffset","yCoordinate","scrollTo","behavior","AppHomePageMenu","useState","setStickiness","titlePos","setTitlePos","projPos","setProjPos","aboutPos","setAboutPos","ref","useRef","handleScroll","current","titleTextHeight","menuPos","titleText","document","getElementById","offsetHeight","projectsSectionHeight","projectsSection","aboutSectionHeight","aboutSection","useEffect","addEventListener","removeEventListener","smooth","to","Routes","scroll","PageSectionOuterWrapper","section","height","PageSectionInnerWrapper","PageSectionBackgroundWrapper","bgColor","bgImage","bgSize","bgImagePosition","blur","flipHorizontal","transform","applyBgStyles","PageSection","children","defaultProps","undefined","Content","TitleText","IntroSection","KeyboardImage","id","TextContainer","HeaderText","DescriptionText","buttonStyles","ExternalLinkButton","a","InternalLinkButton","NavLink","Image","image","shadow","imageHeight","imageWidth","ProjectSection","buttonText","description","external","header","imageOnLeft","link","textContainer","href","rel","target","content","imageComponent","PROJECTS","name","NeosensoryImage","EmpireAppImage","MeditationArticleImage","PortfolioSection","map","key","faceImageStyles","margin","width","maxWidth","borderRadius","AboutText","AboutSection","src","AboutImage","alt","style","Text","Footer","AppHomePage","MenuSubArea","Link","HashLink","SPICERACK","SpiceRackImage","ScrollToTopOnMount","SpiceRack","WoodHeader","EMPIRE_SECTIONS","AppLogo","XDDemo","ExpoDemo","AmplitudeImage","color","fontWeight","textDecoration","ArticleImage","EmpireApp","EmpireAppHeader","projectMenu","AppContainer","path","component","Boolean","location","hostname","match","GlobalStyle","createGlobalStyle","APP_ROOT_NODE","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48e4f31c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spice-rack.38da13c8.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/white-keyboard.0c1b1e20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meditation-article-cover-image-with-text.056dd4a4.png\";","module.exports = __webpack_public_path__ + \"static/media/neosensory-image.9200c039.png\";","module.exports = __webpack_public_path__ + \"static/media/empire-app-image.a8dcd2ea.png\";","module.exports = __webpack_public_path__ + \"static/media/headshot.ca8de443.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wood_header.acd5af0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amplitude.96496e4a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.1a5d0b2e.png\";","module.exports = __webpack_public_path__ + \"static/media/article-image.1804dbfb.png\";","module.exports = __webpack_public_path__ + \"static/media/expo-demo.07570f17.gif\";","module.exports = __webpack_public_path__ + \"static/media/xd-demo.b63166bd.png\";","module.exports = __webpack_public_path__ + \"static/media/empire_app_header2x.55faed60.png\";","const COLORS = {\n  ACCENT_COLOR: '#49a3f2',\n  ACCENT_COLOR_1: '#319af7',\n  ACCENT_COLOR_2: '#1785e6',\n  EMPIRE_BLUE: '#4AA6F5',\n};\n\nconst NEUTRALS = {\n  BLACK: '#000',\n  LIGHT_GRAY: '#F1EFEB',\n  MED_LIGHT_GRAY: '#E8E5E1',\n  LIGHT_BACKGROUND: '#FFF',\n  OFF_WHITE_BACKGROUND: '#F8F8F8',\n  LIGHT_TEXT: '#FFF',\n  DARK_TEXT: '#282D2B',\n  OFF_WHITE: '#F0EFEF',\n  OFF_WHITE_BLUE: '#F1F9FF',\n  WHITE: '#FFF',\n};\n\nexport { COLORS, NEUTRALS };\n","export const ROOT = '/home';\nexport const HOME = `${ROOT}#top`;\nexport const PORTFOLIO = `${ROOT}#projects`;\nexport const ABOUT = `${ROOT}#about`;\n\n// Projects\nconst PROJECTS_ROOT = '/projects';\nexport const DESK = `${PROJECTS_ROOT}/desk`;\nexport const EMPIRE_APP = `${PROJECTS_ROOT}/empire-app`;\nexport const SHOE_RACK = `${PROJECTS_ROOT}/shoe-rack`;\nexport const SPICE_RACK = `${PROJECTS_ROOT}/spice-rack`;\n\n// External links\nexport const EMPIRE_APP_APP_STORE = 'https://apps.apple.com/us/app/empire-party-game/id1494647723';\nexport const NEOSENSORY_EXTERNAL = 'https://neosensory.com';\nexport const MEDITATION_ARTICLE = 'https://www.medium.com/better-humans/shaping-your-meditation-through-brain-science-ddd33b0fe2ad?source=friends_link&sk=8bc68d28a599bd097120fef820bb8c54';\nexport const EMPIRE_APP_TUTORIAL = 'https://blog.bitsrc.io/building-a-react-native-app-with-expo-530ddef0e1ab?source=friends_link&sk=e706805a23efbbe25c11d0e09964d12c';\n","// @flow\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { NavHashLink } from 'react-router-hash-link';\n\nimport { NEUTRALS } from '../../core/styles/Colors';\nimport * as Routes from '../../core/router/Routes';\n\nconst StickyWrapper = styled.div`\n  top: 0;\n  position: absolute;\n  width: 100%;\n`;\n\nconst Menu = styled.div`\n  padding: 0 32px;\n  position: fixed;\n  width: 100%;\n  height: 72px;\n  z-index: 200;\n\n  ${(props) => (props.isSticky ? css`\n    background-color: ${NEUTRALS.LIGHT_BACKGROUND};\n    position: fixed;\n    top: 0;\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);\n    ` : `\n    background-color: ${NEUTRALS.LIGHT_BACKGROUND};\n    top: 0;\n    position: absolute;\n    box-shadow: none;\n    `\n  )}\n`;\n\nconst MenuHashLink = styled(NavHashLink)`\n  color: ${NEUTRALS.DARK_TEXT};\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 200;\n  line-height: 30px;\n  top: calc(50% - 36px / 2);\n  position: absolute;\n  text-decoration: none;\n  transition: left 0.3s, opacity 0.3s;\n  opacity: 1;\n\n  ${(props) => props.pos};\n\n  &:hover {\n   color: ${NEUTRALS.BLACK};\n   cursor: pointer;\n  }\n`;\n\nconst titleWidth = 142.19;\nconst projWidth = 84.56;\nconst aboutWidth = 62.5;\nconst menuMargin = 48;\n\nconst titleCenter = css`left: calc(50% - ${titleWidth}px / 2);`;\nconst titleInvisible = css`\n  opacity: 0;\n  ${titleCenter}\n`;\nconst titleLeft = css`left: calc(${menuMargin}px);`;\nconst projRight = css`left: calc(100% - calc(${projWidth}px + ${aboutWidth}px + calc(${menuMargin}px * 2)));`;\nconst projCenter = css`left: calc(50% - ${projWidth}px / 2);`;\nconst projLeft = css`left: calc(${titleWidth}px + calc(${menuMargin}px * 2));`;\nconst aboutRight = css`left: calc(100% - calc(${aboutWidth}px + ${menuMargin}px));`;\nconst aboutCenter = css`left: calc(50% - ${aboutWidth}px / 2);`;\n\nconst getElementYCoordinate = (el) => el.getBoundingClientRect().top + window.pageYOffset;\n\nconst scrollWithOffset = (el) => {\n  const yCoordinate = getElementYCoordinate(el);\n  const yOffset = -71;\n  window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' });\n};\n\nconst AppHomePageMenu = () => {\n  const [isSticky, setStickiness] = useState(false);\n  const [titlePos, setTitlePos] = useState(titleInvisible);\n  const [projPos, setProjPos] = useState(projRight);\n  const [aboutPos, setAboutPos] = useState(aboutRight);\n  const ref = useRef({});\n\n  const handleScroll = () => {\n    if (ref.current) {\n      const menuPos = ref.current.getBoundingClientRect().top;\n      const titleText = document.getElementById('TitleText');\n      let titleTextHeight;\n      if (titleText) {\n        titleTextHeight = getElementYCoordinate(titleText) + titleText.offsetHeight;\n      }\n      const projectsSection = document.getElementById('projects');\n      let projectsSectionHeight;\n      if (projectsSection) {\n        projectsSectionHeight = getElementYCoordinate(projectsSection);\n      }\n      const aboutSection = document.getElementById('about');\n      let aboutSectionHeight;\n      if (aboutSection) {\n        aboutSectionHeight = getElementYCoordinate(aboutSection);\n      }\n\n      setStickiness(menuPos < 0);\n      if (menuPos - 72 >= -1 * titleTextHeight) {\n        setTitlePos(titleInvisible);\n        setProjPos(projRight);\n        setAboutPos(aboutRight);\n      }\n      else if (!projectsSectionHeight || menuPos - 72 >= -1 * projectsSectionHeight) {\n        setTitlePos(titleCenter);\n        setProjPos(projRight);\n        setAboutPos(aboutRight);\n      }\n      else if (!aboutSection || menuPos - 72 >= -1 * aboutSectionHeight) {\n        setTitlePos(titleLeft);\n        setProjPos(projCenter);\n        setAboutPos(aboutRight);\n      }\n      else {\n        setTitlePos(titleLeft);\n        setProjPos(projLeft);\n        setAboutPos(aboutCenter);\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', () => handleScroll);\n    };\n  }, []);\n  return (\n    <StickyWrapper ref={ref}>\n      <Menu isSticky={isSticky}>\n        <MenuHashLink\n            smooth\n            pos={titlePos}\n            to={Routes.HOME}>\n          mike perrotta\n        </MenuHashLink>\n        <MenuHashLink\n            smooth\n            pos={projPos}\n            scroll={scrollWithOffset}\n            to={Routes.PORTFOLIO}>\n          projects\n        </MenuHashLink>\n        <MenuHashLink\n            smooth\n            pos={aboutPos}\n            scroll={scrollWithOffset}\n            to={Routes.ABOUT}>\n          about\n        </MenuHashLink>\n      </Menu>\n    </StickyWrapper>\n  );\n};\n\nexport default AppHomePageMenu;\n","// @flow\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport type { Node } from 'react';\n\nconst applyBgStyles = ({\n  bgColor, bgImage, bgSize, bgImagePosition, blur, flipHorizontal\n}) => {\n  if (bgImage) {\n    let transform = flipHorizontal ? 'scaleX(-1)' : '';\n    if (blur) {\n      transform += ' scale(1.1)';\n    }\n    return css`\n      background-color: ${bgColor};\n      background-image: url(${bgImage});\n      background-position: ${bgImagePosition || 'center'};\n      background-repeat: no-repeat;\n      background-size: ${bgSize || 'cover'};\n      filter: blur(${blur}px);\n      transform: ${transform};\n    `;\n  }\n  if (bgColor) {\n    return css`\n      background-color: ${bgColor};\n      background-size: ${bgSize || 'auto'};\n    `;\n  }\n  return css`\n    background: none;\n  `;\n};\n\n// \"min-width\" because this container needs to stretch to 100% of the width of the window\nexport const PageSectionOuterWrapper = styled.section`\n  display: flex;\n  height: ${(props) => (props.height)}\n  justify-content: center;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n`;\n\n// \"padding\" adds space between the window edge and the content when the window size is really small\nexport const PageSectionInnerWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n\n  @media only screen and (min-width: 768px) {\n    align-items: stretch;\n  }\n`;\n\nconst PageSectionBackgroundWrapper = styled.div`\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  ${(props) => applyBgStyles(props)}\n`;\n\ntype Props = {\n  bgColor ? :string;\n  bgImage ? :string;\n  bgSize ? :string;\n  bgImagePosition ? :string;\n  blur ? :int;\n  children :Node;\n  flipHorizontal ? :boolean;\n  height ? :string;\n};\n\nconst PageSection = ({\n  bgColor,\n  bgImage,\n  bgSize,\n  bgImagePosition,\n  height,\n  blur,\n  flipHorizontal,\n  children\n} :Props) => (\n  <PageSectionOuterWrapper height={height}>\n    <PageSectionBackgroundWrapper\n        bgColor={bgColor}\n        bgImage={bgImage}\n        bgSize={bgSize}\n        bgImagePosition={bgImagePosition}\n        blur={blur}\n        flipHorizontal={flipHorizontal} />\n    <PageSectionInnerWrapper>\n      { children }\n    </PageSectionInnerWrapper>\n  </PageSectionOuterWrapper>\n);\n\nPageSection.defaultProps = {\n  bgColor: undefined,\n  bgImage: undefined,\n  bgSize: undefined,\n  bgImagePosition: undefined,\n  blur: 0,\n  flipHorizontal: false,\n  height: 'auto',\n};\n\nexport default PageSection;\n","// @flow\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport AppHomePageMenu from '../app/AppHomePageMenu';\nimport PageSection from '../../components/layout/PageSection';\nimport KeyboardImage from '../../assets/images/white-keyboard.jpg';\n\nimport { NEUTRALS } from '../../core/styles/Colors';\n\n/* styled components */\nconst Content = styled.div`\n  align-items: center;\n  display: block;\n  flex-direction: column;\n  margin: 170px auto 0px auto;\n  max-width: 100%;\n  text-align: center;\n`;\n\nconst TitleText = styled.div`\n  color: ${NEUTRALS.DARK_TEXT};\n  font-family: Muli;\n  font-size: 72px;\n  font-style: normal;\n  font-weight: 200;\n  padding: 0px 50px;\n  text-align: center;\n`;\n\n/* react component */\nconst IntroSection = () => (\n  <PageSection\n      bgImage={KeyboardImage}\n      height=\"100%\">\n    <AppHomePageMenu />\n    <Content>\n      <TitleText id=\"TitleText\">\n        mike perrotta\n      </TitleText>\n    </Content>\n  </PageSection>\n);\n\nexport default IntroSection;\n","// @flow\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { COLORS, NEUTRALS } from '../../core/styles/Colors';\n\n/* styled components */\nconst Content = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  font-size: 20px;\n  font-weight: 200;\n  height: 100%;\n  justify-content: space-evenly;\n  opacity: 0.9;\n  text-align: center;\n  width: 100%;\n`;\n\nconst TextContainer = styled.div`\n  flex-direction: column;\n  width: 30%;\n`;\n\nconst HeaderText = styled.div`\n  margin: 10px 0px;\n  font-weight: 600;\n`;\n\nconst DescriptionText = styled.div`\n  margin: 30px 0px;\n`;\n\nconst buttonStyles = css`\n  background-color: ${COLORS.ACCENT_COLOR};\n  border-radius: 15px;\n  border: none;\n  color: ${NEUTRALS.LIGHT_TEXT}\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: 0.25px;\n  outline: none;\n  padding: 10px 15px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: ${COLORS.ACCENT_COLOR_1};\n  }\n\n  &:active {\n    background-color: ${COLORS.ACCENT_COLOR_2};\n  }\n`;\n\nconst ExternalLinkButton = styled.a`\n  ${buttonStyles}\n`;\n\nconst InternalLinkButton = styled(NavLink)`\n  ${buttonStyles}\n`;\n\nconst Image = styled.div`\n  background-color: transparent;\n  background-image: url(${(props) => (props.image)});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  filter: ${(props) => (props.shadow || 'none')};\n  height: ${(props) => (props.imageHeight || 'calc(100% - 120px)')};\n  width: ${(props) => (props.imageWidth || '30%')};\n  position: relative;\n`;\n\ntype Props = {\n  section :Object;\n};\n\n/* react component */\nconst ProjectSection = ({ section } :Props) => {\n  const {\n    buttonText,\n    description,\n    external,\n    header,\n    image,\n    imageHeight,\n    imageOnLeft,\n    imageWidth,\n    link,\n    shadow,\n  } = section;\n  const textContainer = (\n    <TextContainer>\n      <HeaderText>\n        { header }\n      </HeaderText>\n      <DescriptionText>\n        { description }\n      </DescriptionText>\n      { buttonText && (\n        external\n          ? (\n            <ExternalLinkButton\n                href={link}\n                rel=\"noreferrer noopener\"\n                target=\"_blank\">\n              { buttonText }\n            </ExternalLinkButton>\n          )\n          : <InternalLinkButton to={link}>{ buttonText }</InternalLinkButton>\n      )}\n    </TextContainer>\n  );\n  let content = textContainer;\n  if (image) {\n    const imageComponent = (\n      <Image\n          image={image}\n          imageHeight={imageHeight}\n          imageWidth={imageWidth}\n          shadow={shadow} />\n    );\n    content = imageOnLeft ? (\n      <>\n        { imageComponent }\n        { textContainer }\n      </>\n    ) : (\n      <>\n        { textContainer }\n        { imageComponent }\n      </>\n    );\n  }\n  return (\n    <Content>\n      { content }\n    </Content>\n  );\n};\n\nexport default ProjectSection;\n","// @flow\n\nimport MeditationArticleImage from '../../assets/images/meditation-article-cover-image-with-text.png';\nimport NeosensoryImage from '../../assets/images/neosensory-image.png';\nimport EmpireAppImage from '../../assets/images/empire-app-image.png';\nimport { NEUTRALS } from '../../core/styles/Colors';\n\nimport * as Routes from '../../core/router/Routes';\n\nconst shadow = 'drop-shadow(2px 8px 6px rgba(0, 0, 0, 0.25))';\n\nconst PROJECTS :Object[] = [\n  {\n    name: 'Neosensory',\n    image: NeosensoryImage,\n    imageOnLeft: false,\n    buttonText: 'Check it out',\n    header: 'Neosensory',\n    description: `I’m a scientist at Neosensory, where\n    we create hardware devices that give people\n    new senses. Check out some of the projects\n    I’ve helped build.`,\n    bgColor: NEUTRALS.OFF_WHITE_BACKGROUND,\n    link: Routes.NEOSENSORY_EXTERNAL,\n    external: true,\n    imageHeight: 'calc(100% - 220px)',\n  },\n  {\n    name: 'Empire App',\n    image: EmpireAppImage,\n    imageOnLeft: true,\n    buttonText: 'Learn more',\n    header: 'Party Game App',\n    description: `I made an app for a party game I love to\n    play, so that no one has to sit out to\n    facilitate the game. I also wrote a tutorial on\n    how I made this app with React Native and Expo.`,\n    bgColor: NEUTRALS.LIGHT_BACKGROUND,\n    link: Routes.EMPIRE_APP,\n    external: false,\n    imageHeight: 'calc(100% - 200px)',\n  },\n  {\n    name: 'Meditation Article',\n    buttonText: 'Read my article',\n    image: MeditationArticleImage,\n    imageOnLeft: false,\n    header: 'Shaping Your Meditation Through Brain Science',\n    description: `As a meditator and a neuroscientist,\n    I’m curious about how clearing your\n    mind changes your brain. `,\n    bgColor: NEUTRALS.OFF_WHITE_BACKGROUND,\n    link: Routes.MEDITATION_ARTICLE,\n    external: true,\n    shadow,\n  },\n];\n\nexport default PROJECTS;\n","import React from 'react';\n\nimport PageSection from '../../components/layout/PageSection';\nimport ProjectSection from '../../components/content/ProjectSection';\nimport PROJECTS from './Projects';\n\n/* react component */\nconst PortfolioSection = () => (\n  <div id=\"projects\">\n    {\n      PROJECTS.map((section) => (\n        <PageSection bgColor={section.bgColor} height=\"550px\" key={section.name}>\n          <ProjectSection\n              section={section} />\n        </PageSection>\n      ))\n    }\n  </div>\n);\n\nexport default PortfolioSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport AboutImage from '../../assets/images/about/headshot.jpg';\nimport PageSection from '../../components/layout/PageSection';\nimport { NEUTRALS } from '../../core/styles/Colors';\n\n/* styled components */\nconst Content = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst TextContainer = styled.div`\n  font-size: 20px;\n  max-width: 500px;\n  margin: 0 50px;\n  font-weight: 200;\n`;\n\nconst faceImageStyles = {\n  margin: '60px',\n  width: '414px',\n  maxWidth: '80%',\n  borderRadius: '50%',\n};\n\nconst AboutText = (\n  <TextContainer>\n    <p>I am a scientist, writer, and coder.</p>\n    <p>\n      As a neuroscientist, I want to understand\n      how people think and how their brains work.\n    </p>\n    <p>\n      As a writer, I want to share\n      knowledge and stories with people.\n    </p>\n    <p>\n      As a coder, I want to create products that\n      people can use, tools that improve lives.\n    </p>\n    <p>\n      I currently get to practice all three skills\n      at Neosensory, where we build hardware\n      devices that give people new senses.\n    </p>\n    <p>\n      I am always looking for new projects\n      that help me understand people, share\n      with people, and create for people.\n    </p>\n    <p>I also happen to brew a mean keg of kombucha.</p>\n  </TextContainer>\n);\n\n/* react component */\nconst AboutSection = () => (\n  <PageSection bgColor={NEUTRALS.LIGHT_BACKGROUND}>\n    <div id=\"about\" />\n    <Content>\n      <img src={AboutImage} alt=\"\" style={faceImageStyles} />\n      {AboutText}\n    </Content>\n  </PageSection>\n);\n\nexport default AboutSection;\n","// @flow\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { NEUTRALS } from '../../core/styles/Colors';\n\nconst Content = styled.div`\n  align-items: center;\n  background-color: ${NEUTRALS.LIGHT_BACKGROUND};\n  display: flex;\n  justify-content: flex-start;\n  height: 50px;\n`;\n\nconst Text = styled.div`\n  color: ${NEUTRALS.DARK_TEXT};\n  font-family: Muli;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 200;\n  margin: 0 20px;\n  text-align: center;\n`;\n\nconst Footer = () => (\n  <Content>\n    <Text>© Mike Perrotta 2020. Made by me.</Text>\n  </Content>\n);\n\nexport default Footer;\n","import React from 'react';\n\nimport IntroSection from '../intro/IntroSection';\nimport PortfolioSection from '../portfolio/PortfolioSection';\nimport AboutSection from '../about/AboutSection';\nimport Footer from '../../components/content/Footer';\n\nconst AppHomePage = () => (\n  <>\n    <div id=\"top\" />\n    <IntroSection />\n    <PortfolioSection />\n    <AboutSection />\n    <Footer />\n  </>\n);\n\nexport default AppHomePage;\n","// @flow\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { NavHashLink } from 'react-router-hash-link';\n\nimport { NEUTRALS } from '../../core/styles/Colors';\nimport * as Routes from '../../core/router/Routes';\n\n/* styled components */\nconst StickyWrapper = styled.div`\n  width: 100%;\n`;\n\nconst Content = styled.div`\n  align-items: center;\n  background: ${NEUTRALS.LIGHT_BACKGROUND};\n  display: flex;\n  flex-direction: row;\n  font-size: 20px;\n  font-weight: 200;\n  justify-content: space-between;\n  padding: 15px 20px;\n  text-align: center;\n  width: 100%;\n  z-index: 200;\n\n  ${(props) => (props.isSticky ? css`\n  opacity: 0.98;\n  position: fixed;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);\n  ` : `\n  opacity: 1.0;\n  position: absolute;\n  box-shadow: none;\n  `)}\n`;\n\nconst MenuSubArea = styled.div``;\n\nconst Link = styled(NavLink)`\n  color: ${NEUTRALS.DARK_TEXT};\n  justify-content: center;\n  margin: 0px 20px;\n  text-decoration: none;\n\n  &:hover {\n    color: ${NEUTRALS.DARK_TEXT};\n    cursor: pointer;\n  }\n`;\n\nconst HashLink = styled(NavHashLink)`\n  color: ${NEUTRALS.DARK_TEXT};\n  justify-content: center;\n  margin: 0px 20px;\n  text-decoration: none;\n\n  &:hover {\n    color: ${NEUTRALS.DARK_TEXT};\n    cursor: pointer;\n  }\n`;\n\n/* react component */\nconst Menu = () => {\n  const [isSticky, setStickiness] = useState(false);\n  const ref = useRef({});\n  const handleScroll = () => {\n    if (ref.current) {\n      setStickiness(ref.current.getBoundingClientRect().top < 0);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', () => handleScroll);\n    };\n  }, []);\n\n  return (\n    <StickyWrapper ref={ref}>\n      <Content isSticky={isSticky}>\n        <MenuSubArea>\n          <Link to={Routes.ROOT}> Mike Perrotta </Link>\n        </MenuSubArea>\n        <MenuSubArea>\n          <HashLink smooth to={Routes.PORTFOLIO}> projects </HashLink>\n          <HashLink smooth to={Routes.ABOUT}> about </HashLink>\n        </MenuSubArea>\n      </Content>\n    </StickyWrapper>\n  );\n};\n\nexport default Menu;\n","// @flow\n\nimport SpiceRackImage from '../../../assets/images/spice-rack.jpeg';\nimport { NEUTRALS } from '../../../core/styles/Colors';\n\nconst SPICERACK :Object[] = [\n  {\n    name: 'desk_section_1',\n    image: SpiceRackImage,\n    imageOnLeft: true,\n    header: 'Header',\n    description: `I didn’t like any of the ugly metal spice racks on Amazon,\n    which mostly held too few spices, and just wanted a nice, rustic looking\n    wooden spice rack with plenty of room.`,\n    bgColor: NEUTRALS.MED_LIGHT_GRAY,\n  },\n  {\n    name: 'desk_section_2',\n    image: SpiceRackImage,\n    imageOnLeft: false,\n    header: 'Steel Pipe Desk',\n    description: 'description',\n    bgColor: NEUTRALS.OFF_WHITE,\n  },\n  {\n    name: 'desk_section_3',\n    image: SpiceRackImage,\n    imageOnLeft: true,\n    header: 'Steel Pipe Desk',\n    description: 'description',\n    bgColor: NEUTRALS.MED_LIGHT_GRAY,\n  },\n];\n\nexport default SPICERACK;\n","import { useEffect } from 'react';\n\nfunction ScrollToTopOnMount() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return null;\n}\n\nexport default ScrollToTopOnMount;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Footer from '../../../components/content/Footer';\nimport Menu from '../../../components/content/Menu';\nimport PageSection from '../../../components/layout/PageSection';\nimport ProjectSection from '../../../components/content/ProjectSection';\nimport SPICERACK from './SpiceRackSections';\nimport ScrollToTopOnMount from '../../../core/router/RouterHelpers';\nimport WoodHeader from '../../../assets/images/wood_header.jpg';\n\nimport { NEUTRALS } from '../../../core/styles/Colors';\n\n\n/* styled components */\nconst Content = styled.div`\n  align-items: center;\n  align-items: center;\n  color: ${NEUTRALS.LIGHT_GRAY};\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  font-size: 60px;\n  font-weight: 500;\n  height: 100%;\n  justify-content: center;\n  margin: 40px 80px;\n  text-align: center;\n`;\n\n/* react component */\nconst SpiceRack = () => (\n  <>\n    <ScrollToTopOnMount />\n    <PageSection\n        bgImage={WoodHeader}\n        bgImagePosition=\"0% 28%\"\n        height=\"75%\">\n      <Menu />\n      <Content>\n        Reclaimed Wood\n        <br />\n        Spice Rack\n      </Content>\n    </PageSection>\n    {\n      SPICERACK.map((section) => (\n        <PageSection bgColor={section.bgColor} height=\"680px\" key={section.name}>\n          <ProjectSection\n              header={section.header}\n              description={section.description}\n              image={section.image}\n              imageOnLeft={section.imageOnLeft} />\n        </PageSection>\n      ))\n    }\n    <Footer />\n  </>\n);\n\nexport default SpiceRack;\n","// @flow\nimport React from 'react';\n\nimport AmplitudeImage from '../../../assets/images/empire-app/amplitude.png';\nimport AppLogo from '../../../assets/images/empire-app/logo.png';\nimport ArticleImage from '../../../assets/images/empire-app/article-image.png';\nimport ExpoDemo from '../../../assets/images/empire-app/expo-demo.gif';\nimport XDDemo from '../../../assets/images/empire-app/xd-demo.png';\nimport { COLORS, NEUTRALS } from '../../../core/styles/Colors';\nimport * as Routes from '../../../core/router/Routes';\n\nconst shadow = 'drop-shadow(2px 8px 6px rgba(0, 0, 0, 0.25))';\n\nconst EMPIRE_SECTIONS :Object[] = [\n  {\n    name: 'section_1',\n    buttonText: 'Check out the app',\n    image: AppLogo,\n    imageOnLeft: true,\n    imageWidth: '25%',\n    header: 'The game',\n    description: `Empire is my go-to game for large groups because it is easy to learn and\n    works well with any number of players. The downside is someone has\n    to sit out to facilitate the game. I wanted to create an app with React Native,\n    and this seemed like a great excuse.`,\n    bgColor: NEUTRALS.WHITE,\n    link: Routes.EMPIRE_APP_APP_STORE,\n    external: true,\n  },\n  {\n    name: 'section_2',\n    image: XDDemo,\n    imageOnLeft: false,\n    header: 'Design',\n    description: `I used Adobe XD to design the visuals and the navigation pathways.\n    Creating the designs without letting myself get hung up on perfection\n    allowed me to start coding quickly and with efficiency.`,\n    bgColor: NEUTRALS.OFF_WHITE_BLUE,\n    shadow,\n  },\n  {\n    name: 'section_3',\n    image: ExpoDemo,\n    imageOnLeft: true,\n    imageWidth: '35%',\n    header: 'React Native and Expo',\n    description: `I used React Native so I could develop\n    for both iOS and Android simultaneously. I used Expo because\n    it saves a lot of the headache of setting up a new React Native project.`,\n    bgColor: NEUTRALS.WHITE,\n    shadow,\n  },\n  {\n    name: 'section_4',\n    image: AmplitudeImage,\n    imageOnLeft: false,\n    header: 'Analytics',\n    description:\n  <>\n    I wanted to know when people were using my app\n    and how long they were spending on each screen.\n    I used&nbsp;\n    <a\n        href=\"https://amplitude.com\"\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        style={{\n          color: COLORS.EMPIRE_BLUE,\n          fontWeight: 300,\n          textDecoration: 'none'\n        }}>\n      Amplitude\n    </a>\n    &nbsp;as my analytics tool and found that\n    it was very easy to integrate into my Expo project.\n  </>,\n    bgColor: NEUTRALS.OFF_WHITE_BLUE,\n    shadow,\n  },\n  {\n    bgColor: NEUTRALS.WHITE,\n    description: `I wrote a tutorial giving more detail to each step.\n    You can follow along with my steps in order to\n    develop an app of your own, from concept to App Store.`,\n    header: 'Tutorial',\n    image: ArticleImage,\n    imageOnLeft: true,\n    name: 'section_5',\n    shadow,\n    buttonText: 'Read the tutorial',\n    link: Routes.EMPIRE_APP_TUTORIAL,\n    external: true,\n  }\n];\n\nexport default EMPIRE_SECTIONS;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport EMPIRE_APP from './EmpireAppSections';\nimport EmpireAppHeader from '../../../assets/images/empire-app/empire_app_header2x.png';\nimport Footer from '../../../components/content/Footer';\nimport AppHomePageMenu from '../../app/AppHomePageMenu';\nimport PageSection from '../../../components/layout/PageSection';\nimport ProjectSection from '../../../components/content/ProjectSection';\nimport ScrollToTopOnMount from '../../../core/router/RouterHelpers';\n\nimport { COLORS, NEUTRALS } from '../../../core/styles/Colors';\n\n\n/* styled components */\nconst Content = styled.div`\n  align-items: center;\n  align-items: center;\n  color: ${NEUTRALS.LIGHT_GRAY};\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  font-size: 60px;\n  font-weight: 500;\n  height: 100%;\n  justify-content: center;\n  margin: 40px 80px;\n  text-align: center;\n`;\n\n/* react component */\nconst EmpireApp = () => (\n  <>\n    <ScrollToTopOnMount />\n    <PageSection\n        bgColor={COLORS.EMPIRE_BLUE}\n        bgImage={EmpireAppHeader}\n        bgImagePosition=\"0% 28%\"\n        bgSize=\"contain\"\n        height=\"75%\">\n      <AppHomePageMenu projectMenu />\n      <Content />\n    </PageSection>\n    {\n      EMPIRE_APP.map((section) => (\n        <PageSection bgColor={section.bgColor} height=\"680px\" key={section.name}>\n          <ProjectSection\n              section={section} />\n        </PageSection>\n      ))\n    }\n    <Footer />\n  </>\n);\n\nexport default EmpireApp;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport AppHomePage from './AppHomePage';\nimport AppAboutPage from './AppAboutPage';\nimport SpiceRack from '../projects/spicerack/SpiceRack';\nimport EmpireApp from '../projects/empire_app/EmpireApp';\nimport * as Routes from '../../core/router/Routes';\n\nconst AppContainer = () => (\n  <Switch>\n    <Route path={Routes.EMPIRE_APP} component={EmpireApp} />\n    <Route path={Routes.SPICE_RACK} component={SpiceRack} />\n    <Route component={AppHomePage} />\n  </Switch>\n);\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\n\nimport AppContainer from './containers/app/AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    background-color: #ffffff;\n    font-family: 'Muli', sans-serif;\n    height: 100%;\n    line-height: normal;\n    margin: 0;\n    width: 100%;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  #app {\n    display: block;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst APP_ROOT_NODE = document.getElementById('app');\n\nif (APP_ROOT_NODE) {\n  ReactDOM.render(\n    <Router>\n      <AppContainer />\n      <GlobalStyle />\n    </Router>,\n    APP_ROOT_NODE\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}